
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }

    // Allow public read on these collections
    match /properties/{propertyId} {
      allow read: if true;
      allow create: if request.auth != null && (request.resource.data.listedBy == 'Owner' || request.resource.data.listedBy == 'Agent' || request.resource.data.listedBy == 'Builder');
      allow update, delete: if request.auth != null && (resource.data.email == request.auth.token.email || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }
    
    match /app_settings/{document=**} {
        allow read: if true;
        allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /property_types/{typeId} {
      allow read: if true;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /resources/{resourceId} {
        allow read: if true;
        allow write: if request.auth != null && (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'seller');
    }
    
    match /reward_offers/{offerId} {
        allow read: if true;
        allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Users can read any profile, but only write to their own. Admins can write to any.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth == null || request.auth.uid != null;
      allow update: if request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Users can manage their own documents. Admins can read any.
    match /users/{userId}/documents/{docId} {
        allow read, write: if request.auth.uid == userId;
        allow read: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Authenticated users can create leads.
    match /leads/{leadId} {
      allow read, write: if request.auth != null;
    }
    
    // Authenticated users can manage appointments.
    match /appointments/{appointmentId} {
      allow read, write: if request.auth != null;
    }

    // Wallets are managed by admins or the user themselves for specific actions.
    match /wallets/{walletId} {
        allow read: if request.auth.uid == walletId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
        allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'; // Only admins can write directly
    }

    match /withdrawal_requests/{reqId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null;
        allow update: if request.auth != null && (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'seller');
    }
    
     match /reward_transactions/{transactionId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null; // Server-side logic will validate who can create
    }
    
    match /inquiries/{inquiryId} {
        allow create: if true; // Public contact form
        allow read, write: if request.auth != null; // Partners/admins can manage
    }
    
     match /requirements/{reqId} {
        allow create, read, write: if request.auth != null;
    }
    
    match /support_tickets/{ticketId} {
        allow create: if request.auth != null;
        allow read, update: if request.auth.uid == resource.data.userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /wallet_transactions/{transactionId} {
        allow create: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /receivables/{receivableId} {
        allow read: if request.auth != null;
        allow create, update: if request.auth != null && (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'seller');
    }
    
    match /payables/{payableId} {
        allow read: if request.auth != null;
        allow create, update: if request.auth != null && (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'seller');
    }
    
    match /files/{fileId} {
        allow read, write: if request.auth != null;
    }
  }
}

service firebase.storage {
  match /b/{bucket}/o {
    match /{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null;
    }
  }
}
